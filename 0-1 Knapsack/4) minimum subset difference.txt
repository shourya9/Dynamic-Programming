#include <bits/stdc++.h>
using namespace std;
int subsetSum(int arr[],int n,int range)
{
    //cout<<range<<endl;
    bool dp[n+1][range+1];
    for(int i=0;i<n+1;i++)
    {
        for(int j=0;j<range+1;j++)
        {
            if(i==0)
            {
                dp[i][j]=false;
            }
            if(j==0)
            {
                dp[i][j]=true;
            }
        }
    }
    for(int i=1;i<n+1;i++)
    {
        for(int j=1;j<range+1;j++)
        {
            if(arr[i-1]<=j)
            {
                dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
            }
            else
            {
                dp[i][j]=dp[i-1][j];
            }
        }
    }
    vector<int> v;
    for(int j=0;j<=range/2;j++)
    {
        if(dp[n][j]==true)
        {
            v.push_back(j);
        }
    }
    /*for(auto x:v)
    {
        cout<<x<<" ";
    }
    cout<<endl;*/
    int mn=INT_MAX;
    for(int i=0;i<v.size();i++)
    {
        mn=min(mn,(range-2*v[i]));
    }
    //cout<<mn<<endl;
    return mn;
}
int main()
{
    int arr[]={1,2,7};
    int n = sizeof(arr)/sizeof(arr[0]);
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum=sum+arr[i];
    }
    cout<<subsetSum(arr,n,sum);

}
