class Solution {
public:
    bool subsetSum(vector<int>& v,int sum)
    {
        bool t[v.size()+1][sum+1];
        for(int i=0;i<v.size()+1;i++)
        {
            for(int j=0;j<sum+1;j++)
            {
                if(i==0)
                    t[i][j]=false;
                if(j==0)
                    t[i][j]=true;
            }
        }
        for(int i=1;i<v.size()+1;i++)
        {
            for(int j=1;j<sum+1;j++)
            {
                if(v[i-1]<=j)
                {
                    t[i][j]=t[i-1][j-v[i-1]] || t[i-1][j];
                }
                else
                {
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[v.size()][sum];
    }
    bool canPartition(vector<int>& n) {
        int sum=0;
        for(int i=0;i<n.size();i++)
        {
            sum=sum+n[i];
        }
        if(sum%2!=0)
            return false;
        else
            return subsetSum(n,sum/2);
    }
};